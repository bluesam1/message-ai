rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is the document owner
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      // Anyone authenticated can read user profiles (for displaying names/photos)
      allow read: if isAuthenticated();
      
      // Users can only create/update their own profile
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      
      // No one can delete user profiles
      allow delete: if false;
    }
    
    // Conversations collection
    match /conversations/{conversationId} {
      // Users can read conversations they participate in
      allow read: if isAuthenticated() && 
                     request.auth.uid in resource.data.participants;
      
      // Users can create conversations if they're in the participants list
      allow create: if isAuthenticated() && 
                       request.auth.uid in request.resource.data.participants &&
                       request.resource.data.participants is list;
      
      // Users can update conversations they participate in
      allow update: if isAuthenticated() && 
                       request.auth.uid in resource.data.participants;
      
      // Users cannot delete conversations (consider soft delete instead)
      allow delete: if false;
    }
    
    // Messages collection
    match /messages/{messageId} {
      // Users can read any message (we'll filter by conversationId in queries)
      // Alternative: fetch conversation first to check participation
      allow read: if isAuthenticated();
      
      // Users can create messages if they're the sender
      allow create: if isAuthenticated() && 
                       request.auth.uid == request.resource.data.senderId;
      
      // Users can update messages to mark as read (add to readBy array)
      allow update: if isAuthenticated();
      
      // Users cannot delete messages (consider soft delete instead)
      allow delete: if false;
    }
  }
}

